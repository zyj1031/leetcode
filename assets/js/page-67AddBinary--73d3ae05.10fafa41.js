(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{543:function(t,n,a){"use strict";a.r(n);var r=a(2),s=Object(r.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_67-add-binary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_67-add-binary"}},[t._v("#")]),t._v(" 67. Add Binary")]),t._v(" "),a("p",[t._v("Given two binary strings, return their sum (also a binary string).")]),t._v(" "),a("p",[t._v("The input strings are both non-empty and contains only characters "),a("code",[t._v("1")]),t._v(" or "),a("code",[t._v("0")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"constraints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constraints"}},[t._v("#")]),t._v(" Constraints")]),t._v(" "),a("ul",[a("li",[t._v("Each string consists only of "),a("code",[t._v("'0'")]),t._v(" or "),a("code",[t._v("'1'")]),t._v(" characters.")]),t._v(" "),a("li",[a("code",[t._v("1 <= a.length")]),t._v(", "),a("code",[t._v("b.length <= 10^4")])]),t._v(" "),a("li",[t._v("Each string is either "),a("code",[t._v('"0"')]),t._v(" or doesn't contain any leading zero.")])])])}),[],!1,null,null,null);n.default=s.exports}}]);